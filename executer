#!/bin/sh

[ ! -s "$1" ] && exit 1
[ -s "$2" ] && [ -f "$2" ] && INCLUDED_ENVIRON="--variables-file '$2'"
OUTPUT=$(eval "hurl $INCLUDED_ENVIRON -i '"$1"' 2>&1")
HTTP_HEADERS=$(echo "$OUTPUT" | awk -v RS="" 'NR==1 {print $0}')
RESPONSE_BODY=$(echo "$OUTPUT" | awk -v RS="" 'NR>1 {print $0}')
FIRST_LINE=$(echo "$HTTP_HEADERS" | awk 'NR==1 {print}')

case "$FIRST_LINE" in
    *"error"*) 
        FIRST_LINE='Http error' ;;
esac

EXTENSION=$(echo "$RESPONSE_BODY" | file --mime-type -b - | sed 's/.*\///')

BASENAME="${1##*/}" 
BASENAME="${BASENAME%.*}"
DESTFOLDER="$OUTPUT_BASE/$BASENAME"

[ ! -d  "$DESTFOLDER" ] && mkdir "$DESTFOLDER"
DEST="$DESTFOLDER/$(date +%H:%M:%SD%d-%m-%Y).$EXTENSION"

if [ $EXTENSION = "json" ]; then
    echo "$RESPONSE_BODY" | jq . > "$DEST" 
elif [ $EXTENSION = "octet-stream" ]; then
    echo "$HTTP_HEADERS $RESPONSE_BODY" > "$DEST" 
else
    echo "$RESPONSE_BODY" > "$DEST"
fi
nvim --server $LISTEN_ADDRESS --remote-send "<cmd>lua require('panels.output'):receive_output('$DEST','$FIRST_LINE')<CR>"
